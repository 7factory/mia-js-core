/**
 *
 *
 */

var _ = require('lodash');
var MongoClient = require('mongodb').MongoClient

module.exports = function (app) {
    var self = this;

    var Modules = require('moduleLoader')(app);

    self.initializeModels = function (cb) {
        //load models files
        app.models = Modules.optional({
            dirName: app.rootPath + app.config.system.modelsPath,
            filter: /(.+)\.(js)$/,
            mode: 'list'
        });

        //===============================
        // Mongoose
//        _.forEach(app.models, function (model, index) {
//            apply plugins to scheme
//            model.schema.plugin(PublicMemberHandling);
//            model.schema.plugin(Upsert);
//
//            generate models
//            if (model.modelType === 'mongoose') {
//                model.model = Mongoose.model(index, model.schema);
//            }
//            else {
//                throw new Error("Unknown model type '" + model.modelType + "' in model '" + index + "' at '" + model.absoluteFullPath + "'. Only mongoose is supported yet. Please specify self.modelType = 'mongoose' in your model.");
//            }
//        });
        //===============================

        cb();
    };

    //===============================
    //MongoDB
    function MongoDbAdapter() {
        var self = this;
        self.mongoClient = MongoClient;
        self.app = app;


        
        var srvOpts = {
            auto_reconnect: true,
            poolSize: 10,
        };

        var conn = new Mongo.Server("localhost", 27017, srvOpts),
            db = new Mongo.Db("dbname", conn, {});

        db.open(function (){});




        self.connect = function(callback) {
            MongoClient.connect(app.config.environment.mongoDbUri, function (err, db) {
                self.db = db;
                callback(err, db);
            });
        };




        return self;
    };

    self.initializeMongoDbAdapter = function () {
        app.adapters = app.adapters || {};
        app.adapters.mongoDb = new MongoDbAdapter();
    };

    //===============================
    //  Mongoose
//    function MongooseAdapter() {
//        var self = this;
//        self.mongooseModule = Mongoose;
//        self.app = app;
//        self.connectToMongo = function () {
//            self.mongooseModule.connect(app.config.environment.mongooseUri, app.config.environment.mongooseOptions);
//        }
//
//        return self;
//    };
//
//    self.initializeMongooseAdapter = function () {
//        app.adapters = app.adapters || {};
//        app.adapters.mongoose = new MongooseAdapter();
//    };
    //===============================

    return self;
}